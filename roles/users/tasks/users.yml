---
- name: detect ZSH path
  shell: which zsh
  register: which_zsh
  changed_when: false
  tags:
    - always

- name: configure users
  user:
    name: "{{ item.name }}"
    groups: "{{ item.groups|d([]) }}"
    uid: "{{ item.uid|d(1000) }}"
    createhome: yes
    shell: "{{ which_zsh.stdout }}"
    state: present
  with_items: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"
  when: users is defined
  become: true

- name: configure authorized keys
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.pub_key }}"
  when: users is defined and item.pub_key is defined
  with_items: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"
  become: true

- name: configure private keys
  copy:
    dest: "/home/{{ item.name }}/.ssh/id_rsa"
    content: "{{ item.id_rsa }}"
  when: users is defined and item.id_rsa is defined
  with_items: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"
  become: true

- name: add sudoers
  copy:
    src: files/sudoers
    dest: /etc/sudoers.d/10-rbox
    force: no
  when: users is defined
  become: true

- name: add Makefile
  copy:
    src: files/Makefile
    dest: "/home/{{ item.name }}/Makefile"
    force: no
  with_items: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"
  when: users is defined
  become: true

- name: add users to dialout group
  user:
    name: "{{ item.name }}"
    groups: dialout
    append: yes
  with_items: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"
  when: users is defined
  become: true
  tags:
    - vagrant

- name: remove default user
  user:
    name: "{{ default_user }}"
    state: absent
  when: default_user is defined
  become: true
