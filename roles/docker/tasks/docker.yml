---
- name: add dockerâ€™s official GPG key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
  become: true

- name: get os arch
  command: dpkg --print-architecture
  changed_when: false
  register: os_arch

- name: add docker repository
  apt_repository:
    repo: deb [arch={{ os_arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu oracular stable
    state: present
    filename: docker
    mode: 0600
  become: true

- name: install docker
  apt:
    state: latest
    update_cache: true
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
  become: true

- name: start docker service
  service: name=docker enabled=yes state=started
  become: true

- name: get docker-credential-helpers checksum file
  get_url:
    url: https://github.com/docker/docker-credential-helpers/releases/download/{{ docker_credential_helpers_version }}/checksums.txt
    dest: /root/docker-credential-helpers-checksum
  become: true

- name: get docker-credential-helpers checksum
  command: grep pass-{{ docker_credential_helpers_version }}.linux-{{ os_arch.stdout }} /root/docker-credential-helpers-checksum
  register: helpers_checksum
  become: true

- name: install docker-credential-helpers
  get_url:
    url: https://github.com/docker/docker-credential-helpers/releases/download/{{ docker_credential_helpers_version }}/docker-credential-pass-{{ docker_credential_helpers_version }}.linux-{{ os_arch.stdout }}
    dest: /usr/local/bin/docker-credential-pass
    checksum: "sha256:{{ helpers_checksum.stdout.split()[0] }}"
  become: true

- name: add users to docker group
  user:
    name: "{{ item.name }}"
    groups: docker
    append: yes
  with_items: "{{ users }}"
  become: true
  loop_control:
    label: "{{ item.name }}"

- name: ensure .docker exists
  file:
    path: /home/{{ users.0.name }}.linux/.docker
    state: directory
  tags:
    - lima

- name: copy default config
  copy:
    src: files/config.json
    dest: /home/{{ users.0.name }}.linux/.docker/config.json
    force: no
  become: true
  tags:
    - lima
